{"version":3,"file":"static/js/910.4b1deba8.chunk.js","mappings":"oRAEAA,EAAAA,EAAAA,SAAAA,QAAwB,+BACxB,IAAMC,EAAS,4CAEFC,EAAsB,WACjC,OAAOF,EAAAA,EAAAA,GAAM,uBAAD,OAAwBC,IACnCE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACf,EAEYC,EAAe,SAAAC,GAC1B,OAAOR,EAAAA,EAAAA,GAAM,gBAAD,OAAiBC,EAAjB,iCAAiDO,EAAjD,yBACXL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACf,EAEYG,EAAgB,SAACC,GAC5B,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,GAAX,OAAqBT,EAArB,oBACXE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACf,EAEYM,EAAe,SAAAD,GAC1B,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,mBAA6BT,IACxCE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACf,EAEYO,EAAe,SAAAF,GAC1B,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,mBAA6BT,IACxCE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACf,C,8ECCD,UAzBa,WACX,OAAyBO,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAaC,EAAb,KACQL,GAAWM,EAAAA,EAAAA,MAAXN,QASR,OAPAO,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAaD,GACZP,MAAK,SAAAe,GAAG,OACPH,EAAQG,EAAIJ,KADL,IAERK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACX,GAAE,CAACV,KAGF,yBACGI,EAAKS,KAAI,SAAAC,GACR,OACE,4BACA,gBAAKC,QAAS,WAAM,EAAEC,IAAG,0CAAqCF,EAAMG,cAAgBC,IAAI,WACxF,uBAAIJ,EAAMK,QACV,uCAAeL,EAAMM,eAHXN,EAAMO,GAKnB,KAGN,C","sources":["components/API.js","components/Cast.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL =\"https://api.themoviedb.org/3\";\nconst API_KEY =\"?api_key=e633b089e078da3047049086e70158e9\";\n\nexport const fetchTrendingMovies = ()=>{\n  return axios(`/trending/movie/week${API_KEY}`)\n  .then(response => response.data.results)\n};\n\nexport const searchMovies = movieNameValue =>{\n  return axios(`/search/movie${API_KEY}&language=en-US&query=${movieNameValue}&include_adult=false`)\n  .then(response => response.data.results)\n};\n\nexport const detailsMovies = (movieId) =>{\n  return axios(`/movie/${movieId}${API_KEY}&language=en-US`)\n  .then(response => response.data)\n};\n\nexport const creditsMovie = movieId =>{\n  return axios(`/movie/${movieId}/credits${API_KEY}`)\n  .then(response => response.data)\n};\n\nexport const reviewsMovie = movieId =>{\n  return axios(`/movie/${movieId}/reviews${API_KEY}`)\n  .then(response => response.data.results)\n};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { creditsMovie } from '../components/API';\n\nconst Cast = () => {\n  const [cast, setCast ] = useState([]); //склад акторів у фільмі\n  const { movieId }= useParams();\n\n  useEffect(()=>{\n    creditsMovie(movieId)\n    .then(res => \n      setCast(res.cast))\n    .catch(err => console.log(err))\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast.map(actor => {\n        return (\n          <div key={actor.id}>\n          <img onError={()=>{}} src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`} alt='actor'></img>\n          <p>{actor.name}</p>\n          <p>Character: {actor.character}</p>\n          </div>);\n      })}\n    </div>\n  )\n}\n\nexport default Cast;"],"names":["axios","API_KEY","fetchTrendingMovies","then","response","data","results","searchMovies","movieNameValue","detailsMovies","movieId","creditsMovie","reviewsMovie","useState","cast","setCast","useParams","useEffect","res","catch","err","console","log","map","actor","onError","src","profile_path","alt","name","character","id"],"sourceRoot":""}