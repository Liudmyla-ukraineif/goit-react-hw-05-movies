{"version":3,"file":"static/js/261.3d6d568c.chunk.js","mappings":"oRAEAA,EAAAA,EAAAA,SAAAA,QAAwB,+BACxB,IAAMC,EAAS,4CAEFC,EAAsB,WACjC,OAAOF,EAAAA,EAAAA,GAAM,uBAAD,OAAwBC,IACnCE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACf,EAEYC,EAAe,SAAAC,GAC1B,OAAOR,EAAAA,EAAAA,GAAM,gBAAD,OAAiBC,EAAjB,iCAAiDO,EAAjD,yBACXL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACf,EAEYG,EAAgB,SAACC,GAC5B,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,GAAX,OAAqBT,EAArB,oBACXE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACf,EAEYM,EAAe,SAAAD,GAC1B,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,mBAA6BT,IACxCE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACf,EAEYO,EAAe,SAAAF,GAC1B,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,mBAA6BT,IACxCE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACf,C,sFC8BD,UAtDqB,WAAO,IAAD,IACzB,GAAoCO,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACOL,GAAWM,EAAAA,EAAAA,MAAXN,QACDO,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAE3DC,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,IAAcC,GACbP,MAAK,SAAAqB,GAEJ,OAAIA,EAAaT,EAAcS,GACtBC,QAAQC,OAAO,IAAIC,MAAJ,sNACvB,IACFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACX,GAAE,CAACnB,IAEJ,IAAOsB,EAA2DlB,EAA3DkB,YAAaC,EAA8CnB,EAA9CmB,MAAOC,EAAuCpB,EAAvCoB,aAAcC,EAAyBrB,EAAzBqB,SAAzC,EAAkErB,EAAfsB,OAAAA,OAAnD,MAA4D,GAA5D,EAEA,OAGE,4BACE,SAAC,KAAD,CAAMC,GAAIlB,EAAoBmB,QAA9B,sBAEA,4BACE,gBAAKC,QAAS,WAAM,EAAEC,IAAG,0CAAqCR,GAAeS,IAAI,kBACjF,4BACE,0BAAKR,EAAL,QACA,wCAAgBS,KAAKC,MAAqB,GAAfT,GAA3B,QACA,uCACA,uBAAIC,KACJ,qCACA,uBAAIC,EAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAI7C,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMV,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAIJ,SAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAKP,C","sources":["components/API.js","components/pages/MovieDetails.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL =\"https://api.themoviedb.org/3\";\nconst API_KEY =\"?api_key=e633b089e078da3047049086e70158e9\";\n\nexport const fetchTrendingMovies = ()=>{\n  return axios(`/trending/movie/week${API_KEY}`)\n  .then(response => response.data.results)\n};\n\nexport const searchMovies = movieNameValue =>{\n  return axios(`/search/movie${API_KEY}&language=en-US&query=${movieNameValue}&include_adult=false`)\n  .then(response => response.data.results)\n};\n\nexport const detailsMovies = (movieId) =>{\n  return axios(`/movie/${movieId}${API_KEY}&language=en-US`)\n  .then(response => response.data)\n};\n\nexport const creditsMovie = movieId =>{\n  return axios(`/movie/${movieId}/credits${API_KEY}`)\n  .then(response => response.data)\n};\n\nexport const reviewsMovie = movieId =>{\n  return axios(`/movie/${movieId}/reviews${API_KEY}`)\n  .then(response => response.data.results)\n};","import { Suspense, useRef, useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { detailsMovies } from '../API';\n\nconst MovieDetails = () => {\n  const [movieDetal, setMovieDetal] = useState([]); //додаткова інформація про фільм по id\n  const {movieId} = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? \"/movies\");\n\n  useEffect(()=>{\n    detailsMovies(movieId)\n    .then(res => {\n\n      if (res) {return setMovieDetal(res)}\n        return Promise.reject(new Error(`Не вдалося знайти даних по вашому запиту`))\n      })\n    .catch(err => console.log(err))\n  }, [movieId])\n\n  const {poster_path, title, vote_average, overview, genres = []} = movieDetal;\n\n  return (\n    \n\n    <div>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n\n      <div>\n        <img onError={()=>{}} src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt='poster movie'></img>\n        <div>\n          <h2>{title} </h2>\n          <p>User Score: {Math.round(vote_average * 10)}&#37;</p>\n          <h3>Overview:</h3>\n          <p>{overview}</p>\n          <h3>Genres:</h3>\n          <p>{genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </div>\n\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to='cast'>Cast</Link>\n        </li>\n        <li>\n          <Link to='reviews'>Reviews</Link>\n        </li>\n      </ul>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet/>\n      </Suspense>\n      \n    </div>\n  );\n}\n\nexport default MovieDetails;"],"names":["axios","API_KEY","fetchTrendingMovies","then","response","data","results","searchMovies","movieNameValue","detailsMovies","movieId","creditsMovie","reviewsMovie","useState","movieDetal","setMovieDetal","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","res","Promise","reject","Error","catch","err","console","log","poster_path","title","vote_average","overview","genres","to","current","onError","src","alt","Math","round","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}